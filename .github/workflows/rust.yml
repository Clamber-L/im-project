name: Build Rust Binaries

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
            pkg-config build-essential cmake perl \
            musl-tools libssl-dev

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
          override: true

      - name: Build all binaries (statically linked)
        env:
          OPENSSL_STATIC: "1"
          OPENSSL_NO_VENDOR_CHECK: "1"
          OPENSSL_DIR: "/usr"
        run: |
          cd im-server
          mkdir -p dist
          for crate in $(find service -maxdepth 1 -type d); do
            if [ -f "$crate/Cargo.toml" ]; then
              binary=$(basename "$crate")
              echo "== Building $binary =="
              cargo build --release --target x86_64-unknown-linux-musl --manifest-path "$crate/Cargo.toml"
              mkdir -p dist/$binary
              cp target/x86_64-unknown-linux-musl/release/$binary dist/$binary/
              cd dist/$binary
              tar -czvf ../${binary}-linux.tar.gz $binary
              zip ../${binary}-linux.zip $binary
              cd -
            fi
          done

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rust-binaries
          path: im-server/dist/*.tar.gz

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: github.ref == 'refs/heads/main'
        with:
          files: im-server/dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload ZIPs to Release
        uses: softprops/action-gh-release@v2
        if: github.ref == 'refs/heads/main'
        with:
          files: im-server/dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}