//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "litemall_checkpoint")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: Option<String>,
    pub card: Option<String>,
    pub recard: Option<String>,
    pub r#type: Option<i32>,
    pub areaid: Option<String>,
    pub digitalmapid: Option<String>,
    pub mapx: Option<String>,
    pub mapy: Option<String>,
    pub customerid: Option<String>,
    pub remark: Option<String>,
    pub createtime: Option<DateTime>,
    pub areaname: Option<String>,
    pub digitalmapname: Option<String>,
    pub create_time: Option<DateTime>,
    pub recordid: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::litemall_record::Entity",
        from = "Column::Recordid",
        to = "super::litemall_record::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    LitemallRecord,
}

impl Related<super::litemall_record::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::LitemallRecord.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
