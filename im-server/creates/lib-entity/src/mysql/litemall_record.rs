//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "litemall_record")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub createtime: Option<DateTime>,
    pub patrolmanid: Option<String>,
    pub checkpointid: Option<String>,
    pub deviceid: Option<String>,
    pub customerid: Option<String>,
    pub uuid: Option<String>,
    pub uploadtime: Option<DateTime>,
    pub areaname: Option<String>,
    pub username: Option<String>,
    pub create_time: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::litemall_checkpoint::Entity")]
    LitemallCheckpoint,
    #[sea_orm(has_many = "super::litemall_device::Entity")]
    LitemallDevice,
}

impl Related<super::litemall_checkpoint::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::LitemallCheckpoint.def()
    }
}

impl Related<super::litemall_device::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::LitemallDevice.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
